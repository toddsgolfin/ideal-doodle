---
- name: OS update
  hosts: debian
  gather_facts: yes
  become: yes

  tasks:
    - name: dist-upgrade
      ansible.builtin.apt:
        upgrade: dist
        update_cache: yes
      register: upgrade_result

    - name: Check if a reboot is required
      ansible.builtin.stat:
        path: /var/run/reboot-required
        get_checksum: no
      register: reboot_required_file

    - name: Reboot the server (if required).
      ansible.builtin.reboot:
      when: reboot_required_file.stat.exists
      register: reboot_result

    - name: Remove unneeded dependencies
      ansible.builtin.apt:
        autoremove: yes
      register: autoremove_result

    - name: Print errors if upgrade failed
      ansible.builtin.debug:
        msg: |
          Upgrade Result: {{ upgrade_result }}
          Reboot Result: {{ reboot_result }}
          Autoremove Result: {{ autoremove_result }}

# ## ubuntu-update.yml ##

# - name: Perform update on all Ubuntu servers
#   hosts: ubuntu
#   gather_facts: yes
#   become: yes

#   tasks:
#   - name: Perform a dist-upgrade.
#     ansible.builtin.apt:
#       update_cache: yes
#       upgrade: yes

#   - name: Check if a reboot is needed
#     register: reboot_required_file
#     stat: path=/var/run/reboot-required get_md5=no

#   - name: Reboot the box if kernel updated/installed
#     reboot:
#       msg: "Reboot initiated by Ansible for kernel updates"
#       connect_timeout: 5
#       reboot_timeout: 300
#       pre_reboot_delay: 0
#       post_reboot_delay: 30
#       test_command: uptime
#     when: reboot_required_file.stat.exists

#   - name: Remove dependencies that are no longer required
#     ansible.builtin.apt:
#       autoremove: yes
